#!/usr/bin/env python3
import asyncio
import websockets
import sys


async def test_websocket():
    uri = "ws://localhost:8000/ws"
    
    try:
        print(f"Connecting to {uri}...")
        async with websockets.connect(uri) as websocket:
            print("‚úÖ WebSocket connection established successfully!")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            test_data = b"test audio chunk data"
            print(f"Sending test data: {len(test_data)} bytes")
            await websocket.send(test_data)
            
            # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞
            try:
                response = await asyncio.wait_for(
                    websocket.recv(), timeout=5.0
                )
                print(f"‚úÖ Received response: {response}")
            except asyncio.TimeoutError:
                print("‚ö†Ô∏è  No response received within 5 seconds")
            
            # –ñ–¥–µ–º –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            print("Waiting for additional messages...")
            try:
                while True:
                    message = await asyncio.wait_for(
                        websocket.recv(), timeout=2.0
                    )
                    print(f"üì® Received: {message}")
            except asyncio.TimeoutError:
                print("No more messages")
                
    except websockets.exceptions.ConnectionRefused:
        print("‚ùå Connection refused. Is the server running?")
        return False
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False
    
    return True

if __name__ == "__main__":
    success = asyncio.run(test_websocket())
    sys.exit(0 if success else 1) 